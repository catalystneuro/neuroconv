[build-system]
requires = ["setuptools>=64"]
build-backend = "setuptools.build_meta"

[project]
name = "neuroconv"
version = "0.6.5"
description = "Convert data from proprietary formats to NWB format."
readme = "README.md"
authors = [
    { name = "Cody Baker" },
    { name = "Szonja Weigl" },
    { name = "Heberto Mayorquin" },
    { name = "Paul Adkisson" },
    { name = "Luiz Tauffer" },
    { name = "Ben Dichter", email = "ben.dichter@catalystneuro.com" },
]


license = { file = "license.txt" }
keywords = ["nwb", "NeurodataWithoutBorders"]
classifiers = [
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS",
    "License :: OSI Approved :: BSD License",

]
requires-python = ">=3.9"
dependencies = [
    "numpy>=1.22.0, <2.0.0; python_version <= '3.11'",
    "numpy>=1.26.0, <2.0.0; python_version >= '3.12'",
    "jsonschema>=3.2.0",
    "PyYAML>=5.4",
    "scipy>=1.4.1",
    "h5py>=3.9.0",
    "hdmf>=3.13.0",
    "hdmf_zarr>=0.7.0",
    "pynwb>=2.7.0",
    "pydantic>=2.0.0",
    "typing_extensions>=4.1.0",
    "psutil>=5.8.0",
    "tqdm>=4.60.0",
    "pandas",
    "parse>=1.20.0",
    "click",
    "docstring-parser",
    "packaging"  # Issue 903
]


[project.urls]
"Homepage" = "https://github.com/catalystneuro/neuroconv"
"Documentation" = "https://neuroconv.readthedocs.io/"
"Changelog" = "https://github.com/catalystneuro/neuroconv/blob/main/CHANGELOG.md"


[project.scripts]
neuroconv = "neuroconv.tools.yaml_conversion_specification._yaml_conversion_specification:run_conversion_from_yaml_cli"

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov",
    "ndx-events>=0.2.0",  # for special tests to ensure load_namespaces is set to allow NWBFile load at all times
    "parameterized>=0.8.1",
    "ndx-miniscope",
    "spikeinterface[qualitymetrics]>=0.101.0",
    "zarr<2.18.0",  # Error with Blosc (read-only during decode) in numcodecs on May 7; check later if resolved
    "pytest-xdist"
]

docs = [
    "Jinja2<3.1",
    "Sphinx==5.1.1",
    "sphinx_rtd_theme==1.0.0",
    "readthedocs-sphinx-search==0.1.2",
    "sphinx-toggleprompt==0.2.0",
    "sphinx-copybutton==0.5.0",
    "roiextractors",  # Needed for the API documentation
    "spikeinterface>=0.101.0",  # Needed for the API documentation
    "pydata_sphinx_theme==0.12.0"
]

dandi = ["dandi>=0.58.1"]
compressors = ["hdf5plugin"]
aws = ["boto3"]

##########################
# Modality-specific Extras
##########################

## Text
csv = [
]
excel = [
    "openpyxl",
    "xlrd",
]
text = [
    "neuroconv[csv]",
    "neuroconv[excel]",
]

## Behavior
audio = [
    "ndx-sound>=0.2.0",
]
sleap = [
    "av>=10.0.0",
    "sleap-io>=0.0.2,<0.0.12; python_version<'3.9'",
    "sleap-io>=0.0.2; python_version>='3.9'",
]
deeplabcut = [
    "ndx-pose==0.1.1",
    "tables; platform_system != 'Darwin'",
    "tables>=3.10.1; platform_system == 'Darwin' and python_version >= '3.10'",
]
fictrac = [
]
video = [
    "opencv-python-headless>=4.8.1.78",
]
lightningpose = [
    "ndx-pose==0.1.1",
    "neuroconv[video]",
]
medpc = [
    "ndx-events==0.2.0",
]
behavior = [
    "neuroconv[sleap]",
    "neuroconv[audio]",
    "neuroconv[deeplabcut]",
    "neuroconv[fictrac]",
    "neuroconv[video]",
    "neuroconv[lightningpose]",
    "neuroconv[medpc]",
    "ndx-miniscope>=0.5.1",  # This is for the miniscope behavior data interface, not sure is needed
]


## Ecephys
alphaomega = [
    "neo>=0.13.3",
    "spikeinterface>=0.101.0",
]
axona = [
    "neo>=0.13.3",
    "spikeinterface>=0.101.0",
]
biocam = [
    "neo>=0.13.3",
    "spikeinterface>=0.101.0",
]
blackrock = [
    "neo>=0.13.3",
    "spikeinterface>=0.101.0",
]
cellexplorer = [
    "hdf5storage>=0.1.18",
    "neo>=0.13.3",
    "pymatreader>=0.0.32",
    "spikeinterface>=0.101.0",
]
edf = [
    "neo>=0.13.3",
    "pyedflib>=0.1.36",
    "spikeinterface>=0.101.0",
]
intan = [
    "neo>=0.13.3",
    "spikeinterface>=0.101.0",
]
kilosort = [
    "neo>=0.13.3",
    "spikeinterface>=0.101.0",
]

maxwell = [
    "neo>=0.13.3",
    "spikeinterface>=0.101.0",
]
mcsraw = [
    "neo>=0.13.3",
    "spikeinterface>=0.101.0",
]
mearec = [
    "MEArec>=1.8.0",
    "neo>=0.13.3",
    "spikeinterface>=0.101.0",
]
neuralynx = [
    "natsort>=7.1.1",
    "neo>=0.13.3",
    "spikeinterface>=0.101.0",
]
neuroscope = [
    "lxml>=4.6.5",
    "neo>=0.13.3",
    "spikeinterface>=0.101.0",
]
openephys = [
    "lxml>=4.9.4",
    "neo>=0.13.3",
    "spikeinterface>=0.101.0",
]
phy = [
    "neo>=0.13.3",
    "spikeinterface>=0.101.0",
]
plexon = [
    "neo>=0.13.3",
    "spikeinterface>=0.101.0",
    "zugbruecke >= 0.2.1; platform_system != 'Windows'",
]
spike2 = [
    "neo>=0.13.3",
    "sonpy>=1.7.1; python_version=='3.9' and platform_system != 'Darwin'",
    "spikeinterface>=0.101.0",
]
spikegadgets = [
    "neo>=0.13.3",
    "spikeinterface>=0.101.0",
]
spikeglx = [
    "neo>=0.13.3",
    "spikeinterface>=0.101.0",
]
tdt = [
    "neo>=0.13.3",
    "spikeinterface>=0.101.0",
]
ecephys = [
    "neuroconv[alphaomega]",
    "neuroconv[axona]",
    "neuroconv[biocam]",
    "neuroconv[blackrock]",
    "neuroconv[cellexplorer]",
    "neuroconv[edf]",
    "neuroconv[intan]",
    "neuroconv[kilosort]",
    "neuroconv[maxwell]",
    "neuroconv[mcsraw]",
    "neuroconv[mearec]",
    "neuroconv[neuralynx]",
    "neuroconv[neuroscope]",
    "neuroconv[openephys]",
    "neuroconv[phy]",
    "neuroconv[plexon]",
    "neuroconv[spike2]",
    "neuroconv[spikegadgets]",
    "neuroconv[spikeglx]",
    "neuroconv[tdt]",
]

## Icephys
abf = [
    "ndx-dandi-icephys>=0.4.0",
    "neo>=0.13.2",
]
icephys = [
    "neuroconv[abf]",
]

## Ophys
brukertiff = [
    "roiextractors>=0.5.7",
    "tifffile>=2023.3.21",
]
caiman = [
    "roiextractors>=0.5.7",
]
cnmfe = [
    "roiextractors>=0.5.7",
]
extract = [
    "roiextractors>=0.5.7",
]
hdf5 = [
    "roiextractors>=0.5.7",
]
micromanagertiff = [
    "roiextractors>=0.5.7",
    "tifffile>=2023.3.21",
]
miniscope = [
    "natsort>=8.3.1",
    "ndx-miniscope>=0.5.1",
    "roiextractors>=0.5.7",
]
sbx = [
    "roiextractors>=0.5.7",
]
scanimage = [
    "roiextractors>=0.5.7",
    "scanimage-tiff-reader>=1.4.1",
]
sima = [
    "roiextractors>=0.5.7",
]
suite2p = [
    "roiextractors>=0.5.7",
]
tdt_fp = [
    "ndx-fiber-photometry",
    "roiextractors>=0.5.7",
    "tdt",
]
tiff = [
    "roiextractors>=0.5.7",
    "tiffile>=2018.10.18",
]
ophys = [
    "neuroconv[brukertiff]",
    "neuroconv[caiman]",
    "neuroconv[cnmfe]",
    "neuroconv[extract]",
    "neuroconv[hdf5]",
    "neuroconv[micromanagertiff]",
    "neuroconv[miniscope]",
    "neuroconv[sbx]",
    "neuroconv[scanimage]",
    "neuroconv[sima]",
    "neuroconv[suite2p]",
    "neuroconv[tdt_fp]",
    "neuroconv[tiff]",
]
# Note these are references to the package in pipy (not local)
full = [
    "neuroconv[aws]",
    "neuroconv[compressors]",
    "neuroconv[dandi]",
    "neuroconv[behavior]",
    "neuroconv[ecephys]",
    "neuroconv[icephys]",
    "neuroconv[ophys]",
    "neuroconv[text]",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra --doctest-glob='*.rst'"
testpaths = ["docs/conversion_examples_gallery/", "tests"]
doctest_optionflags = "ELLIPSIS"


[tool.black]
line-length = 120
target-version = ['py38', 'py39', 'py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.toml
  |\.yml
  |\.txt
  |\.sh
  |\.git
  |\.ini
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''


[tool.ruff]

[tool.ruff.lint]
select = [
    "F401",  # Unused import
    "I",  # All isort rules
    "D101",  # Missing docstring in public class
    "D103",  # Missing docstring in public function
]
fixable = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"**__init__.py" = ["F401", "I"]
"tests/**" = ["D"] # We are not enforcing docstrings in tests
"src/neuroconv/tools/testing/data_interface_mixins.py" = ["D"]  # We are not enforcing docstrings in the interface mixings
"docs/conf.py" = ["D"]  # We are not enforcing docstrings in the conf.py file
"docs/conversion_examples_gallery/conftest.py" = ["D"]  # We are not enforcing docstrings in the conversion examples

[tool.ruff.lint.isort]
relative-imports-order = "closest-to-furthest"
known-first-party = ["neuroconv"]


[tool.codespell]
skip = '.git*,*.pdf,*.css'
check-hidden = true
ignore-words-list = 'assertin'
