
Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/basetemporalalignmentinterface.py...

Function: BaseTemporalAlignmentInterface.get_original_timestamps
Docstring:
Retrieve the original unaltered timestamps for the data in this interface.

This function should retrieve the data on-demand by re-initializing the IO.

Returns
-------
timestamps: numpy.ndarray
    The timestamps for the data stream.
--------------------------------------------------------------------------------

Function: BaseTemporalAlignmentInterface.get_timestamps
Docstring:
Retrieve the timestamps for the data in this interface.

Returns
-------
timestamps: numpy.ndarray
    The timestamps for the data stream.
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/baseextractorinterface.py...

Function: BaseExtractorInterface.get_extractor
Docstring:
Get the extractor class for this interface.

Returns
-------
type
    The extractor class that will be used to read the data.
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/basedatainterface.py...

Function: BaseDataInterface.get_source_schema
Docstring:
Infer the JSON schema for the source_data from the method signature (annotation typing).

Returns
-------
dict
    The JSON schema for the source_data.
--------------------------------------------------------------------------------

Function: BaseDataInterface.get_metadata_schema
Docstring:
Retrieve JSON schema for metadata.

Returns
-------
dict
    The JSON schema defining the metadata structure.
--------------------------------------------------------------------------------

Function: BaseDataInterface.get_metadata
Docstring:
Child DataInterface classes should override this to match their metadata.

Returns
-------
DeepDict
    The metadata dictionary containing basic NWBFile metadata.
--------------------------------------------------------------------------------

Function: BaseDataInterface.get_conversion_options_schema
Docstring:
Infer the JSON schema for the conversion options from the method signature (annotation typing).

Returns
-------
dict
    The JSON schema for the conversion options.
--------------------------------------------------------------------------------

Function: BaseDataInterface.get_default_backend_configuration
Docstring:
Fill and return a default backend configuration to serve as a starting point for further customization.

Parameters
----------
nwbfile : pynwb.NWBFile
    The in-memory object with this interface's data already added to it.
backend : "hdf5", default: "hdf5"
    The type of backend to use when creating the file.
    Additional backend types will be added soon.

Returns
-------
Union[HDF5BackendConfiguration, ZarrBackendConfiguration]
    The default configuration for the specified backend type.
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/nwbconverter.py...

Function: NWBConverter.get_source_schema
Docstring:
Compile input schemas from each of the data interface classes.

Returns
-------
dict
    The compiled source schema from all data interface classes.
--------------------------------------------------------------------------------

Function: NWBConverter.get_metadata_schema
Docstring:
Compile metadata schemas from each of the data interface objects.

Returns
-------
dict
    The compiled metadata schema from all data interface objects.
--------------------------------------------------------------------------------

Function: NWBConverter.get_metadata
Docstring:
Auto-fill as much of the metadata as possible. Must comply with metadata schema.

Returns
-------
DeepDict
    The metadata dictionary containing auto-filled metadata from all interfaces.
--------------------------------------------------------------------------------

Function: NWBConverter.get_conversion_options_schema
Docstring:
Compile conversion option schemas from each of the data interface classes.

Returns
-------
dict
    The compiled conversion options schema from all data interface classes.
--------------------------------------------------------------------------------

Function: NWBConverter.get_default_backend_configuration
Docstring:
Fill and return a default backend configuration to serve as a starting point for further customization.

Parameters
----------
nwbfile : pynwb.NWBFile
    The in-memory object with this interface's data already added to it.
backend : "hdf5" or "zarr", default: "hdf5"
    The type of backend to use when creating the file.

Returns
-------
Union[HDF5BackendConfiguration, ZarrBackendConfiguration]
    The default configuration for the specified backend type.
--------------------------------------------------------------------------------

Function: ConverterPipe.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: ConverterPipe.get_conversion_options_schema
Docstring:
Compile conversion option schemas from each of the data interface classes.
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/tools/path_expansion.py...

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/tools/importing.py...

Function: get_package_version
Docstring:
Retrieve the version of a package.

Parameters
----------
name : str
    Name of package.

Returns
-------
version : Version
    The package version as an object from packaging.version.Version.
--------------------------------------------------------------------------------

Function: get_package
Docstring:
Check if package is installed and return module if so.

Otherwise, raise informative error describing how to perform the installation.
Inspired by https://docs.python.org/3/library/importlib.html#checking-if-a-module-can-be-imported.

Parameters
----------
package_name : str
    Name of the package to be imported.
installation_instructions : str, optional
    String describing the source, options, and alias of package name (if needed) for installation.
    For example,
        >>> installation_source = "conda install -c conda-forge my-package-name"
    Defaults to f"pip install {package_name}".
excluded_python_versions : list of strs, optional
    If a given package has no distribution available for a certain Python version, it can be excluded by this
    import across all platforms. If you wish to be more specific about combinations of platforms and versions,
    use the 'excluded_platforms_and_python_versions' keyword argument instead.
    Allows all Python versions by default.
excluded_platforms_and_python_versions : dict, optional
    Mapping of string platform names to a list of string versions.
    Valid platform strings are: ["linux", "win32", "darwin"] or any other variant used by sys.platform

    In case some combinations of platforms or Python versions are not allowed for the given package,
    specify this dictionary to raise a more specific error to that issue.

    For example, `excluded_platforms_and_python_versions = dict(darwin=["3.7"])` will raise an
    informative error when running on macOS with Python version 3.7.

    This also applies to specific architectures of platforms, such as
    `excluded_platforms_and_python_versions = dict(darwin=dict(arm=["3.7"]))` to exclude a specific Python
    version for M1 Macs.

    Allows all platforms and Python versions by default.

Raises
------
ModuleNotFoundError
--------------------------------------------------------------------------------

Function: get_format_summaries
Docstring:
Simple helper function for compiling high level summaries of all format interfaces and converters.

Returns
-------
dict
    A dictionary mapping interface/converter names to their summary information.
    Each summary contains display_name, keywords, associated_suffixes, and info.
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/tools/optogenetics.py...

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/tools/figshare.py...

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/tools/fiber_photometry.py...

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/tools/processes.py...

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/tools/analyze_docstrings.py...

Function: get_docstring
Docstring:
Extract docstring from a function node.

Parameters
----------
node : ast.FunctionDef
    The AST node representing a function definition.

Returns
-------
str
    The docstring of the function, or "No docstring" if none exists.
--------------------------------------------------------------------------------

Function: get_class_methods
Docstring:
Get all getter methods from a class definition.

Parameters
----------
node : ast.ClassDef
    The class definition node to analyze.

Returns
-------
dict
    Dictionary mapping method names to their docstrings.
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/tools/text.py...

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/tools/hdmf.py...

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/tools/signal_processing.py...

Function: get_rising_frames_from_ttl
Docstring:
Return the frame indices for rising events in a TTL pulse.

Parameters
----------
trace : numpy.ndarray
    A TTL signal.
threshold : float, optional
    The threshold used to distinguish on/off states in the trace.
    The mean of the trace is used by default.

Returns
-------
rising_frames : numpy.ndarray
    The frame indices of rising events.
--------------------------------------------------------------------------------

Function: get_falling_frames_from_ttl
Docstring:
Return the frame indices for falling events in a TTL pulse.

Parameters
----------
trace : numpy.ndarray
    A TTL signal.
threshold : float, optional
    The threshold used to distinguish on/off states in the trace.
    The mean of the trace is used by default.

Returns
-------
falling_frames : numpy.ndarray
    The frame indices of falling events.
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/utils/str_utils.py...

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/utils/checks.py...

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/utils/types.py...

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/utils/json_schema.py...

Function: get_base_schema
Docstring:
Return the base schema used for all other schemas.
--------------------------------------------------------------------------------

Function: get_schema_from_method_signature
Docstring:
Deprecated version of `get_json_schema_from_method_signature`.
--------------------------------------------------------------------------------

Function: get_json_schema_from_method_signature
Docstring:
Get the equivalent JSON schema for a signature of a method.

Also uses `docstring_parser` (NumPy style) to attempt to find descriptions for the arguments.

Parameters
----------
method : callable
    The method to generate the JSON schema from.
exclude : list of str, optional
    List of arguments to exclude from the schema generation.
    Always includes 'self' and 'cls'.

Returns
-------
json_schema : dict
    The JSON schema corresponding to the method signature.
--------------------------------------------------------------------------------

Function: get_schema_from_hdmf_class
Docstring:
Get metadata schema from hdmf class.
--------------------------------------------------------------------------------

Function: get_metadata_schema_for_icephys
Docstring:
Returns the metadata schema for icephys data.

Returns:
    dict: The metadata schema for icephys data.
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/utils/dict.py...

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/utils/path.py...

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/tools/roiextractors/roiextractors.py...

Function: get_nwb_imaging_metadata
Docstring:
Convert metadata from the ImagingExtractor into nwb specific metadata.

Parameters
----------
imgextractor : ImagingExtractor
photon_series_type : {'OnePhotonSeries', 'TwoPhotonSeries'}, optional
--------------------------------------------------------------------------------

Function: get_nwb_segmentation_metadata
Docstring:
Convert metadata from the segmentation into nwb specific metadata.

Parameters
----------
sgmextractor: SegmentationExtractor
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/tools/roiextractors/imagingextractordatachunkiterator.py...

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/tools/neo/neo.py...

Function: get_electrodes_metadata
Docstring:
Get electrodes metadata from Neo reader.

The typical information we look for is the information accepted by pynwb.icephys.IntracellularElectrode:
  - name – the name of this electrode
  - device – the device that was used to record from this electrode
  - description – Recording description, description of electrode (e.g., whole-cell, sharp, etc.)
  - comment: Free-form text (can be from Methods)
  - slice – Information about slice used for recording.
  - seal – Information about seal used for recording.
  - location – Area, layer, comments on estimation, stereotaxis coordinates (if in vivo, etc.).
  - resistance – Electrode resistance COMMENT: unit: Ohm.
  - filtering – Electrode specific filtering.
  - initial_access_resistance – Initial access resistance.

Parameters
----------
neo_reader ([type]): Neo reader
electrodes_ids (list): List of electrodes ids.
block (int, optional): Block id. Defaults to 0.

Returns
-------
list: List of dictionaries containing electrodes metadata.
--------------------------------------------------------------------------------

Function: get_number_of_electrodes
Docstring:
Get number of electrodes from Neo reader.

Returns
-------
int
    The total number of electrodes in the recording.
--------------------------------------------------------------------------------

Function: get_number_of_segments
Docstring:
Get number of segments from Neo reader.

Parameters
----------
neo_reader : neo.io.baseio
    The Neo reader object.
block : int, default: 0
    Block index.

Returns
-------
int
    The number of segments in the specified block.
--------------------------------------------------------------------------------

Function: get_command_traces
Docstring:
Get command traces (e.g. voltage clamp command traces).

Parameters
----------
neo_reader : neo.io.baseio
segment : int, optional
    Defaults to 0.
cmd_channel : int, optional
    ABF command channel (0 to 7). Defaults to 0.
--------------------------------------------------------------------------------

Function: get_conversion_from_unit
Docstring:
Get conversion (to Volt or Ampere) from unit in string format.

Parameters
----------
unit : str
    Unit as string. E.g. pA, mV, uV, etc...

Returns
-------
float
    The conversion factor to convert to Ampere or Volt.
    For example, for 'pA' returns 1e-12 to convert to Ampere.
--------------------------------------------------------------------------------

Function: get_nwb_metadata
Docstring:
Return default metadata for all recording fields.

Parameters
----------
neo_reader : neo.io.baseio
    Neo reader object
metadata : dict, optional
    Metadata info for constructing the nwb file.

Returns
-------
dict
    Default metadata dictionary containing NWBFile and Icephys device information.
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/tools/testing/mock_interfaces.py...

Function: MockInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: MockBehaviorEventInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: MockBehaviorEventInterface.get_original_timestamps
Docstring:
Get the original event times before any alignment or transformation.

Returns
-------
np.ndarray
    The original event times as a NumPy array.
--------------------------------------------------------------------------------

Function: MockBehaviorEventInterface.get_timestamps
Docstring:
Get the current (possibly aligned) event times.

Returns
-------
np.ndarray
    The current event times as a NumPy array, possibly modified after alignment.
--------------------------------------------------------------------------------

Function: MockSpikeGLXNIDQInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: MockRecordingInterface.get_metadata
Docstring:
Returns the metadata dictionary for the current object.
--------------------------------------------------------------------------------

Function: MockSortingInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: MockImagingInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: MockSegmentationInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/tools/testing/mock_files.py...

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/tools/testing/data_interface_mixins.py...

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/tools/testing/mock_probes.py...

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/tools/testing/mock_ttl_signals.py...

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/tools/audio/audio.py...

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/tools/spikeinterface/spikeinterface.py...

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/tools/spikeinterface/spikeinterfacerecordingdatachunkiterator.py...

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ophys/baseimagingextractorinterface.py...

Function: BaseImagingExtractorInterface.get_metadata_schema
Docstring:
Retrieve the metadata schema for the optical physiology (Ophys) data.

Returns
-------
dict
    The metadata schema dictionary containing definitions for Device, ImagingPlane,
    and either OnePhotonSeries or TwoPhotonSeries based on the photon_series_type.
--------------------------------------------------------------------------------

Function: BaseImagingExtractorInterface.get_metadata
Docstring:
Retrieve the metadata for the imaging data.

Returns
-------
DeepDict
    Dictionary containing metadata including device information, imaging plane details,
    and photon series configuration.
--------------------------------------------------------------------------------

Function: BaseImagingExtractorInterface.get_original_timestamps
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: BaseImagingExtractorInterface.get_timestamps
Docstring:
No docstring
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ophys/basesegmentationextractorinterface.py...

Function: BaseSegmentationExtractorInterface.get_metadata_schema
Docstring:
Generate the metadata schema for Ophys data, updating required fields and properties.

This method builds upon the base schema and customizes it for Ophys-specific metadata, including required
components such as devices, fluorescence data, imaging planes, and two-photon series. It also applies
temporary schema adjustments to handle certain use cases until a centralized metadata schema definition
is available.

Returns
-------
dict
    A dictionary representing the updated Ophys metadata schema.

Notes
-----
- Ensures that `Device` and `ImageSegmentation` are marked as required.
- Updates various properties, including ensuring arrays for `ImagingPlane` and `TwoPhotonSeries`.
- Adjusts the schema for `Fluorescence`, including required fields and pattern properties.
- Adds schema definitions for `DfOverF`, segmentation images, and summary images.
- Applies temporary fixes, such as setting additional properties for `ImageSegmentation` to True.
--------------------------------------------------------------------------------

Function: BaseSegmentationExtractorInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: BaseSegmentationExtractorInterface.get_original_timestamps
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: BaseSegmentationExtractorInterface.get_timestamps
Docstring:
No docstring
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ecephys/baserecordingextractorinterface.py...

Function: BaseRecordingExtractorInterface.get_metadata_schema
Docstring:
Compile metadata schema for the RecordingExtractor.

Returns
-------
dict
    The metadata schema dictionary containing definitions for Device, ElectrodeGroup,
    Electrodes, and optionally ElectricalSeries.
--------------------------------------------------------------------------------

Function: BaseRecordingExtractorInterface.get_metadata
Docstring:
Get metadata for the recording extractor.

Returns
-------
DeepDict
    Dictionary containing metadata including device information, electrode groups,
    and electrical series configuration.
--------------------------------------------------------------------------------

Function: BaseRecordingExtractorInterface.get_original_timestamps
Docstring:
Retrieve the original unaltered timestamps for the data in this interface.

This function should retrieve the data on-demand by re-initializing the IO.

Returns
-------
timestamps: numpy.ndarray or list of numpy.ndarray
    The timestamps for the data stream; if the recording has multiple segments, then a list of timestamps is returned.
--------------------------------------------------------------------------------

Function: BaseRecordingExtractorInterface.get_timestamps
Docstring:
Retrieve the timestamps for the data in this interface.

Returns
-------
timestamps: numpy.ndarray or list of numpy.ndarray
    The timestamps for the data stream; if the recording has multiple segments, then a list of timestamps is returned.
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ecephys/basesortingextractorinterface.py...

Function: BaseSortingExtractorInterface.get_metadata_schema
Docstring:
Compile metadata schema for the RecordingExtractor.

Returns
-------
dict
    The metadata schema dictionary containing definitions for Device, ElectrodeGroup,
    Electrodes, and UnitProperties.
--------------------------------------------------------------------------------

Function: BaseSortingExtractorInterface.get_original_timestamps
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: BaseSortingExtractorInterface.get_timestamps
Docstring:
Get the timestamps for the sorting data.

Returns
-------
numpy.ndarray or list of numpy.ndarray
    The timestamps for each spike in the sorting data. If there are multiple segments,
    returns a list of timestamp arrays.
    
Raises
------
NotImplementedError
    If no recording is attached to the sorting extractor.
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ecephys/baselfpextractorinterface.py...

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/icephys/baseicephysinterface.py...

Function: BaseIcephysInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: BaseIcephysInterface.get_metadata_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: BaseIcephysInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: BaseIcephysInterface.get_original_timestamps
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: BaseIcephysInterface.get_timestamps
Docstring:
No docstring
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/text/timeintervalsinterface.py...

Function: TimeIntervalsInterface.get_metadata
Docstring:
Get metadata for the time intervals.

Returns
-------
dict
    The metadata dictionary containing time intervals metadata.
    Includes a TimeIntervals key with trials information.
--------------------------------------------------------------------------------

Function: TimeIntervalsInterface.get_metadata_schema
Docstring:
Get the metadata schema for the time intervals.

Returns
-------
dict
    The schema dictionary for time intervals metadata.
--------------------------------------------------------------------------------

Function: TimeIntervalsInterface.get_original_timestamps
Docstring:
Get the original timestamps for a given column.

Parameters
----------
column : str
    The name of the column containing timestamps.

Returns
-------
np.ndarray
    The original timestamps from the specified column.

Raises
------
ValueError
    If the column name does not end with '_time'.
--------------------------------------------------------------------------------

Function: TimeIntervalsInterface.get_timestamps
Docstring:
Get the current timestamps for a given column.

Parameters
----------
column : str
    The name of the column containing timestamps.

Returns
-------
np.ndarray
    The current timestamps from the specified column.

Raises
------
ValueError
    If the column name does not end with '_time'.
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/behavior/video/videodatainterface.py...

Function: VideoInterface.get_metadata_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: VideoInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: VideoInterface.get_original_timestamps
Docstring:
Retrieve the original unaltered timestamps for the data in this interface.

This function should retrieve the data on-demand by re-initializing the IO.

Returns
-------
timestamps : numpy.ndarray
    The timestamps for the data stream.
stub_test : bool, default: False
    This method scans through each video; a process which can take some time to complete.

    To limit that scan to a small number of frames, set `stub_test=True`.
--------------------------------------------------------------------------------

Function: VideoInterface.get_timing_type
Docstring:
Determine the type of timing used by this interface.

Returns
-------
Literal["starting_time and rate", "timestamps"]
    The type of timing that has been set explicitly according to alignment.

    If only timestamps have been set, then only those will be used.
    If only starting times have been set, then only those will be used.

    If timestamps were set, and then starting times were set, the timestamps will take precedence
    as they will then be shifted by the corresponding starting times.

    If neither has been set, and there is only one video in the file_paths,
    it is assumed the video is regularly sampled and pre-aligned with
    a starting_time of 0.0 relative to the session start time.
--------------------------------------------------------------------------------

Function: VideoInterface.get_timestamps
Docstring:
Retrieve the timestamps for the data in this interface.

Returns
-------
timestamps : numpy.ndarray
    The timestamps for the data stream.
stub_test : bool, default: False
    If timestamps have not been set to this interface, it will attempt to retrieve them
    using the `.get_original_timestamps` method, which scans through each video;
    a process which can take some time to complete.

    To limit that scan to a small number of frames, set `stub_test=True`.
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/behavior/video/video_utils.py...

Function: VideoCaptureContext.get_video_timestamps
Docstring:
Return numpy array of the timestamps(s) for a video file.
--------------------------------------------------------------------------------

Function: VideoCaptureContext.get_video_fps
Docstring:
Return the internal frames per second (fps) for a video file.

Returns
-------
float
    The frames per second of the video.
--------------------------------------------------------------------------------

Function: VideoCaptureContext.get_frame_shape
Docstring:
Return the shape of frames from a video file.

Returns
-------
Tuple
    The shape of the video frames (height, width, channels).
--------------------------------------------------------------------------------

Function: VideoCaptureContext.get_video_frame_count
Docstring:
Get the total number of frames in the video.

Returns
-------
int
    The total number of frames in the video.
--------------------------------------------------------------------------------

Function: VideoCaptureContext.get_cv_attribute
Docstring:
Get an OpenCV attribute by name.

Parameters
----------
attribute_name : str
    The name of the OpenCV attribute to get.
    
Returns
-------
Any
    The OpenCV attribute value.
--------------------------------------------------------------------------------

Function: VideoCaptureContext.get_video_frame
Docstring:
Return the specific frame from a video as an RGB colorspace.

Parameters
----------
frame_number : int
    The index of the frame to retrieve.
    
Returns
-------
numpy.ndarray
    The video frame in RGB colorspace with shape (height, width, 3).
--------------------------------------------------------------------------------

Function: VideoCaptureContext.get_video_frame_dtype
Docstring:
Return the dtype for frame in a video file.

Returns
-------
numpy.dtype
    The data type of the video frames.
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/behavior/sleap/sleapdatainterface.py...

Function: SLEAPInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: SLEAPInterface.get_original_timestamps
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: SLEAPInterface.get_timestamps
Docstring:
No docstring
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/behavior/sleap/sleap_utils.py...

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/behavior/fictrac/fictracdatainterface.py...

Function: FicTracDataInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: FicTracDataInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: FicTracDataInterface.get_original_timestamps
Docstring:
Retrieve and correct timestamps from a FicTrac data file.

This function addresses two specific issues with timestamps in FicTrac data:

1. Resetting Initial Timestamp
   In some instances, FicTrac replaces the initial timestamp (0) with the system time. This commonly occurs
   when the data source is a video file, and OpenCV reports the first timestamp as 0. Since OpenCV also
   uses 0 as a marker for invalid values, FicTrac defaults to system time in that case. This leads to
   inconsistent timestamps like [system_time, t1, t2, t3, ...]. The function corrects this by resetting the
   first timestamp back to 0 when a negative difference is detected between the first two timestamps.
2. Re-centering Unix Epoch Time
   If timestamps are in Unix epoch time format (time since 1970-01-01 00:00:00 UTC), this function re-centers
   the time series by subtracting the first timestamp. This adjustment ensures that timestamps represent the
   elapsed time since the start of the experiment rather than the Unix epoch. This case appears when one of the
   sources of data in FicTrac (such as PGR or Basler) lacks a timestamp extraction method. FicTrac
   then falls back to using the system time, which is in Unix epoch format.

Returns
-------
np.ndarray
    An array of corrected timestamps, in seconds.

Notes
-----
- The issue of the initial timestamp replacement appears in FicTrac 2.1.1 and earlier versions.
- Re-centering is essential for timestamps in Unix epoch format as timestamps in an NWB file must be relative
to the start of the session. The heuristic here is to check if the first timestamp is larger than the length
of a 10-year experiment in seconds. If so, it's assumed that the timestamps are in Unix epoch format.

References
----------
Issue discussion on FicTrac's timestamp inconsistencies:
https://github.com/rjdmoore/fictrac/issues/29
--------------------------------------------------------------------------------

Function: FicTracDataInterface.get_timestamps
Docstring:
No docstring
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/behavior/deeplabcut/deeplabcutdatainterface.py...

Function: DeepLabCutInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: DeepLabCutInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: DeepLabCutInterface.get_original_timestamps
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: DeepLabCutInterface.get_timestamps
Docstring:
No docstring
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/behavior/lightningpose/lightningposeconverter.py...

Function: LightningPoseConverter.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: LightningPoseConverter.get_conversion_options_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: LightningPoseConverter.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/behavior/lightningpose/lightningposedatainterface.py...

Function: LightningPoseDataInterface.get_metadata_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: LightningPoseDataInterface.get_original_timestamps
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: LightningPoseDataInterface.get_timestamps
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: LightningPoseDataInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/behavior/audio/audiointerface.py...

Function: AudioInterface.get_metadata_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: AudioInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: AudioInterface.get_original_timestamps
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: AudioInterface.get_timestamps
Docstring:
No docstring
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/behavior/miniscope/miniscopedatainterface.py...

Function: MiniscopeBehaviorInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: MiniscopeBehaviorInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/behavior/medpc/medpc_helpers.py...

Function: get_medpc_variables
Docstring:
Get the values of the given single-line variables from a MedPC file for all sessions in that file.

Parameters
----------
file_path : FilePathType
    The path to the MedPC file.
variable_names : list
    The names of the variables to get the values of.

Returns
-------
dict
    A dictionary with the variable names as keys and a list of variable values as values.
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/behavior/medpc/medpcdatainterface.py...

Function: MedPCInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: MedPCInterface.get_metadata_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: MedPCInterface.get_original_timestamps
Docstring:
Retrieve the original unaltered timestamps dictionary for the data in this interface.

This function retrieves the data on-demand by re-reading the medpc file.

Parameters
----------
medpc_name_to_info_dict : dict
    A dictionary mapping the names of the desired variables in the MedPC file
    to an info dictionary with the names of the variables in the metadata and whether or not they are arrays.
    ex. {"A": {"name": "left_nose_poke_times", "is_array": True}}

Returns
-------
timestamps_dict: dict
    A dictionary mapping the names of the variables to the original medpc timestamps.
--------------------------------------------------------------------------------

Function: MedPCInterface.get_timestamps
Docstring:
Retrieve the timestamps dictionary for the data in this interface.

Returns
-------
timestamps_dict: dict
    A dictionary mapping the names of the variables to the timestamps.
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/behavior/neuralynx/nvt_utils.py...

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/behavior/neuralynx/neuralynx_nvt_interface.py...

Function: NeuralynxNvtInterface.get_original_timestamps
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: NeuralynxNvtInterface.get_timestamps
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: NeuralynxNvtInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: NeuralynxNvtInterface.get_metadata_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ophys/caiman/caimandatainterface.py...

Function: CaimanSegmentationInterface.get_source_schema
Docstring:
Get the source schema for the Caiman segmentation interface.

Returns
-------
dict
    The schema dictionary containing input parameters and descriptions
    for initializing the CaImAn segmentation interface.
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ophys/micromanagertiff/micromanagertiffdatainterface.py...

Function: MicroManagerTiffImagingInterface.get_source_schema
Docstring:
Get the source schema for the Micro-Manager TIFF imaging interface.

Returns
-------
dict
    The schema dictionary containing input parameters and descriptions
    for initializing the Micro-Manager TIFF interface.
--------------------------------------------------------------------------------

Function: MicroManagerTiffImagingInterface.get_metadata
Docstring:
Get metadata for the Micro-Manager TIFF imaging data.

Returns
-------
dict
    Dictionary containing metadata including session start time, imaging plane details,
    and two-photon series configuration.
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ophys/cnmfe/cnmfedatainterface.py...

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ophys/sbx/sbxdatainterface.py...

Function: SbxImagingInterface.get_metadata
Docstring:
Get metadata for the Scanbox imaging data.

Returns
-------
dict
    Dictionary containing metadata including device information and imaging details
    specific to the Scanbox system.
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ophys/hdf5/hdf5datainterface.py...

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ophys/tdt_fp/tdtfiberphotometrydatainterface.py...

Function: TDTFiberPhotometryInterface.get_metadata
Docstring:
Get metadata for the TDTFiberPhotometryInterface.
--------------------------------------------------------------------------------

Function: TDTFiberPhotometryInterface.get_metadata_schema
Docstring:
Get the metadata schema for the TDTFiberPhotometryInterface.
--------------------------------------------------------------------------------

Function: TDTFiberPhotometryInterface.get_original_timestamps
Docstring:
Get the original timestamps for the data.

Parameters
----------
t1 : float, optional
    Retrieve data starting at t1 (in seconds), default = 0 for start of recording.
t2 : float, optional
    Retrieve data ending at t2 (in seconds), default = 0 for end of recording.

Returns
-------
dict[str, np.ndarray]
    Dictionary of stream names to timestamps.
--------------------------------------------------------------------------------

Function: TDTFiberPhotometryInterface.get_timestamps
Docstring:
Get the timestamps for the data.

Parameters
----------
t1 : float, optional
    Retrieve data starting at t1 (in seconds), default = 0 for start of recording.
t2 : float, optional
    Retrieve data ending at t2 (in seconds), default = 0 for end of recording.

Returns
-------
dict[str, np.ndarray]
    Dictionary of stream names to timestamps.
--------------------------------------------------------------------------------

Function: TDTFiberPhotometryInterface.get_original_starting_time_and_rate
Docstring:
Get the original starting time and rate for the data.

Parameters
----------
t1 : float, optional
    Retrieve data starting at t1 (in seconds), default = 0 for start of recording.
t2 : float, optional
    Retrieve data ending at t2 (in seconds), default = 0 for end of recording.

Returns
-------
dict[str, tuple[float, float]]
    Dictionary of stream names to starting time and rate.
--------------------------------------------------------------------------------

Function: TDTFiberPhotometryInterface.get_starting_time_and_rate
Docstring:
Get the starting time and rate for the data.

Parameters
----------
t1 : float, optional
    Retrieve data starting at t1 (in seconds), default = 0 for start of recording.
t2 : float, optional
    Retrieve data ending at t2 (in seconds), default = 0 for end of recording.

Returns
-------
dict[str, tuple[float, float]]
    Dictionary of stream names to starting time and rate.
--------------------------------------------------------------------------------

Function: TDTFiberPhotometryInterface.get_events
Docstring:
Get a dictionary of events from the TDT files (e.g. camera TTL pulses).

The events dictionary maps from the names of each epoc in the TDT data to an event dictionary.
Each event dictionary maps from "onset", "offset", and "data" to the corresponding arrays.

Returns
-------
dict[str, dict[str, np.ndarray]]
    Dictionary of events.
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ophys/scanimage/scanimageimaginginterfaces.py...

Function: get_scanimage_major_version
Docstring:
Determine the version of ScanImage that produced the TIFF file.

Parameters
----------
scanimage_metadata : dict
    Dictionary of metadata extracted from a TIFF file produced via ScanImage.

Returns
-------
str
    The version of ScanImage that produced the TIFF file.
    
Raises
------
ValueError
    If the ScanImage version could not be determined from metadata.
--------------------------------------------------------------------------------

Function: ScanImageImagingInterface.get_source_schema
Docstring:
Get the source schema for the ScanImage imaging interface.

Returns
-------
dict
    The schema dictionary containing input parameters and descriptions
    for initializing the ScanImage interface.
--------------------------------------------------------------------------------

Function: ScanImageLegacyImagingInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: ScanImageLegacyImagingInterface.get_metadata
Docstring:
Get metadata for the ScanImage imaging data.

Returns
-------
dict
    Dictionary containing metadata including session start time and device information
    specific to the ScanImage system.
--------------------------------------------------------------------------------

Function: ScanImageMultiFileImagingInterface.get_source_schema
Docstring:
Get the source schema for the ScanImage multi-file imaging interface.

Returns
-------
dict
    The schema dictionary containing input parameters and descriptions
    for initializing the ScanImage multi-file interface.
--------------------------------------------------------------------------------

Function: ScanImageMultiPlaneImagingInterface.get_metadata
Docstring:
Get metadata for the ScanImage imaging data.

Returns
-------
dict
    Dictionary containing metadata including session start time and device information
    specific to the ScanImage system.
--------------------------------------------------------------------------------

Function: ScanImageMultiPlaneMultiFileImagingInterface.get_metadata
Docstring:
get metadata for the ScanImage imaging data
--------------------------------------------------------------------------------

Function: ScanImageSinglePlaneImagingInterface.get_metadata
Docstring:
get metadata for the ScanImage imaging data
--------------------------------------------------------------------------------

Function: ScanImageSinglePlaneMultiFileImagingInterface.get_metadata
Docstring:
get metadata for the ScanImage imaging data
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ophys/miniscope/miniscopeconverter.py...

Function: MiniscopeConverter.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: MiniscopeConverter.get_conversion_options_schema
Docstring:
Get the schema for the conversion options.

Returns
-------
dict
    The schema dictionary containing conversion options for the Miniscope interface.
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ophys/miniscope/miniscopeimagingdatainterface.py...

Function: MiniscopeImagingInterface.get_source_schema
Docstring:
Get the source schema for the Miniscope imaging interface.

Returns
-------
dict
    The schema dictionary containing input parameters and descriptions
    for initializing the Miniscope imaging interface.
--------------------------------------------------------------------------------

Function: MiniscopeImagingInterface.get_metadata
Docstring:
Get metadata for the Miniscope imaging data.

Returns
-------
DeepDict
    Dictionary containing metadata including device information, imaging plane details,
    and one-photon series configuration.
--------------------------------------------------------------------------------

Function: MiniscopeImagingInterface.get_metadata_schema
Docstring:
Get the metadata schema for the Miniscope imaging data.

Returns
-------
dict
    The schema dictionary containing metadata definitions and requirements
    for the Miniscope imaging interface.
--------------------------------------------------------------------------------

Function: MiniscopeImagingInterface.get_original_timestamps
Docstring:
No docstring
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ophys/extract/extractdatainterface.py...

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ophys/suite2p/suite2pdatainterface.py...

Function: Suite2pSegmentationInterface.get_source_schema
Docstring:
Get the source schema for the Suite2p segmentation interface.

Returns
-------
dict
    The schema dictionary containing input parameters and descriptions
    for initializing the Suite2p segmentation interface.
--------------------------------------------------------------------------------

Function: Suite2pSegmentationInterface.get_available_planes
Docstring:
Get the available planes in the Suite2p segmentation folder.

Parameters
----------
folder_path : DirectoryPath
    Path to the folder containing Suite2p segmentation data.

Returns
-------
dict
    Dictionary containing information about available planes in the dataset.
--------------------------------------------------------------------------------

Function: Suite2pSegmentationInterface.get_available_channels
Docstring:
Get the available channels in the Suite2p segmentation folder.

Parameters
----------
folder_path : DirectoryPath
    Path to the folder containing Suite2p segmentation data.

Returns
-------
dict
    Dictionary containing information about available channels in the dataset.
--------------------------------------------------------------------------------

Function: Suite2pSegmentationInterface.get_metadata
Docstring:
Get metadata for the Suite2p segmentation data.

Returns
-------
DeepDict
    Dictionary containing metadata including plane segmentation details,
    fluorescence data, and segmentation images.
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ophys/tiff/tiffdatainterface.py...

Function: TiffImagingInterface.get_source_schema
Docstring:
"Get the source schema for the TIFF imaging interface.
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ophys/brukertiff/brukertiffconverter.py...

Function: BrukerTiffMultiPlaneConverter.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: BrukerTiffMultiPlaneConverter.get_conversion_options_schema
Docstring:
Get the schema for the conversion options.

Returns
-------
dict
    The schema dictionary containing conversion options for the Bruker TIFF interface.
--------------------------------------------------------------------------------

Function: BrukerTiffSinglePlaneConverter.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: BrukerTiffSinglePlaneConverter.get_conversion_options_schema
Docstring:
Get the schema for the conversion options.

Returns
-------
dict
    The schema dictionary containing conversion options for the Bruker TIFF interface.
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ophys/brukertiff/brukertiffdatainterface.py...

Function: BrukerTiffMultiPlaneImagingInterface.get_source_schema
Docstring:
Get the source schema for the Bruker TIFF imaging data.

Returns
-------
dict
    The JSON schema for the Bruker TIFF imaging data source.
--------------------------------------------------------------------------------

Function: BrukerTiffMultiPlaneImagingInterface.get_streams
Docstring:
Get streams for the Bruker TIFF imaging data.

Parameters
----------
folder_path : DirectoryPath
    Path to the folder containing the Bruker TIFF files.
plane_separation_type : Literal["contiguous", "disjoint"], optional
    Type of plane separation to apply. If "contiguous", only the first plane stream for each channel is retained.

Returns
-------
dict
    A dictionary containing the streams for the Bruker TIFF imaging data. The dictionary has the following keys:
    - "channel_streams": List of channel stream names.
    - "plane_streams": Dictionary where keys are channel stream names and values are lists of plane streams.
--------------------------------------------------------------------------------

Function: BrukerTiffMultiPlaneImagingInterface.get_metadata
Docstring:
Get metadata for the Bruker TIFF imaging data.

Returns
-------
DeepDict
    The metadata dictionary containing imaging metadata from the Bruker TIFF files.
--------------------------------------------------------------------------------

Function: BrukerTiffSinglePlaneImagingInterface.get_source_schema
Docstring:
Get the source schema for the Bruker TIFF imaging data.

Returns
-------
dict
    The JSON schema for the Bruker TIFF imaging data source.
--------------------------------------------------------------------------------

Function: BrukerTiffSinglePlaneImagingInterface.get_streams
Docstring:
Get streams for the Bruker TIFF imaging data.

Parameters
----------
folder_path : DirectoryPath
    Path to the folder containing the Bruker TIFF files.

Returns
-------
dict
    A dictionary containing the streams extracted from the Bruker TIFF files.
--------------------------------------------------------------------------------

Function: BrukerTiffSinglePlaneImagingInterface.get_metadata
Docstring:
Get metadata for the Bruker TIFF imaging data.

Returns
-------
DeepDict
    The metadata dictionary containing imaging metadata from the Bruker TIFF files.
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ophys/sima/simadatainterface.py...

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ecephys/spikeglx/spikeglx_utils.py...

Function: get_session_start_time
Docstring:
Fetches the session start time from the recording_metadata dictionary.

Parameters
----------
recording_metadata : dict
    The metadata dictionary as obtained from the Spikelgx recording.

Returns
-------
datetime or None
    the session start time in datetime format.
--------------------------------------------------------------------------------

Function: get_device_metadata
Docstring:
Returns a device with description including the metadata as described here
# https://billkarsh.github.io/SpikeGLX/Sgl_help/Metadata_30.html

Returns
-------
dict
    a dict containing the metadata necessary for creating the device
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ecephys/spikeglx/spikeglxconverter.py...

Function: SpikeGLXConverterPipe.get_source_schema
Docstring:
Get the schema for the source arguments.

Returns
-------
dict
    The schema dictionary containing input parameters and descriptions
    for initializing the SpikeGLX converter.
--------------------------------------------------------------------------------

Function: SpikeGLXConverterPipe.get_streams
Docstring:
Get the stream IDs available in the folder.

Parameters
----------
folder_path : DirectoryPath
    Path to the folder containing SpikeGLX streams.

Returns
-------
list of str
    The IDs of all available streams in the folder.
--------------------------------------------------------------------------------

Function: SpikeGLXConverterPipe.get_conversion_options_schema
Docstring:
Get the schema for the conversion options.

Returns
-------
dict
    The schema dictionary containing conversion options for each data interface
    in this converter.
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ecephys/spikeglx/spikeglxdatainterface.py...

Function: SpikeGLXRecordingInterface.get_source_schema
Docstring:
Get the source schema for the SpikeGLX recording interface.

Returns
-------
dict
    The JSON schema for the SpikeGLX recording data source.
--------------------------------------------------------------------------------

Function: SpikeGLXRecordingInterface.get_metadata
Docstring:
Get metadata for the SpikeGLX recording.

Returns
-------
dict
    The metadata dictionary containing recording metadata from the SpikeGLX files.
--------------------------------------------------------------------------------

Function: SpikeGLXRecordingInterface.get_original_timestamps
Docstring:
Get the original timestamps for the SpikeGLX recording.

Returns
-------
numpy.ndarray or list of numpy.ndarray
    The timestamps for each sample in the recording. If there are multiple segments,
    returns a list of timestamps arrays, one for each segment.
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ecephys/spikeglx/spikeglxnidqinterface.py...

Function: SpikeGLXNIDQInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: SpikeGLXNIDQInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: SpikeGLXNIDQInterface.get_channel_names
Docstring:
Get a list of channel names from the recording extractor.

Returns
-------
list of str
    The names of all channels in the NIDQ recording.
--------------------------------------------------------------------------------

Function: SpikeGLXNIDQInterface.get_event_times_from_ttl
Docstring:
Return the start of event times from the rising part of TTL pulses on one of the NIDQ channels.

Parameters
----------
channel_name : str
    Name of the channel in the .nidq.bin file.

Returns
-------
rising_times : numpy.ndarray
    The times of the rising TTL pulses.
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ecephys/openephys/openephysdatainterface.py...

Function: OpenEphysRecordingInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: OpenEphysRecordingInterface.get_stream_names
Docstring:
Get the names of available recording streams in the OpenEphys folder.

Parameters
----------
folder_path : DirectoryPath
    Path to OpenEphys directory (.continuous or .dat files).

Returns
-------
list of str
    The names of the available recording streams.
    
Raises
------
AssertionError
    If the data is neither in 'legacy' (.continuous) nor 'binary' (.dat) format.
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ecephys/openephys/openephyssortingdatainterface.py...

Function: OpenEphysSortingInterface.get_source_schema
Docstring:
Compile input schema for the SortingExtractor.

Returns
-------
dict
    The schema dictionary containing input parameters and descriptions
    for initializing the SortingExtractor.
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ecephys/openephys/openephysbinarydatainterface.py...

Function: OpenEphysBinaryRecordingInterface.get_stream_names
Docstring:
Get the names of available recording streams in the OpenEphys binary folder.

Parameters
----------
folder_path : DirectoryPath
    Path to directory containing OpenEphys binary files.

Returns
-------
list of str
    The names of the available recording streams.
--------------------------------------------------------------------------------

Function: OpenEphysBinaryRecordingInterface.get_source_schema
Docstring:
Compile input schema for the RecordingExtractor.
--------------------------------------------------------------------------------

Function: OpenEphysBinaryRecordingInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ecephys/openephys/openephyslegacydatainterface.py...

Function: OpenEphysLegacyRecordingInterface.get_stream_names
Docstring:
Get the names of available recording streams in the OpenEphys legacy folder.

Parameters
----------
folder_path : DirectoryPath
    Path to directory containing OpenEphys legacy files.

Returns
-------
list of str
    The names of the available recording streams.
--------------------------------------------------------------------------------

Function: OpenEphysLegacyRecordingInterface.get_source_schema
Docstring:
Compile input schema for the RecordingExtractor.
--------------------------------------------------------------------------------

Function: OpenEphysLegacyRecordingInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ecephys/edf/edfdatainterface.py...

Function: EDFRecordingInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: EDFRecordingInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ecephys/plexon/plexondatainterface.py...

Function: PlexonRecordingInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: PlexonRecordingInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: Plexon2RecordingInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: Plexon2RecordingInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: PlexonSortingInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: PlexonSortingInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ecephys/spikegadgets/spikegadgetsdatainterface.py...

Function: SpikeGadgetsRecordingInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ecephys/kilosort/kilosortdatainterface.py...

Function: KiloSortSortingInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: KiloSortSortingInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ecephys/tdt/tdtdatainterface.py...

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ecephys/phy/phydatainterface.py...

Function: PhySortingInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: PhySortingInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ecephys/axona/axona_utils.py...

Function: get_eeg_sampling_frequency
Docstring:
Read sampling frequency from .eegX or .egfX file header.

Parameters
----------
file_path : Path or str
    Full file_path of Axona `.eegX` or `.egfX` file.

Returns
-------
float
    Sampling frequency
--------------------------------------------------------------------------------

Function: get_all_file_paths
Docstring:
Read LFP file_paths of `.eeg` or `.egf` files in file_path's directory.
E.g. if file_path='/my/directory/my_file.eeg', all .eeg channels will be
appended to the output.

Parameters
----------
file_path : FilePathType
    Full file_path of either .egg or .egf file

Returns
-------
path_list : list
    List of file_paths
--------------------------------------------------------------------------------

Function: get_header_bstring
Docstring:
Scan file for the occurrence of 'data_start' and return the header
as byte string

Parameters
----------
file (str or path) : file to be loaded

Returns
-------
str
    header byte content
--------------------------------------------------------------------------------

Function: get_position_object
Docstring:
Read position data from .bin or .pos file and convert to
pynwb.behavior.SpatialSeries objects. If possible it should always
be preferred to read position data from the `.bin` file to ensure
samples are locked to ecephys time courses.

Parameters:
----------
file_path (Path or Str):
    Full file_path of Axona file with any extension.

Returns:
-------
position: pynwb.behavior.Position
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ecephys/axona/axonadatainterface.py...

Function: AxonaRecordingInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: AxonaRecordingInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: AxonaUnitRecordingInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: AxonaLFPDataInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: AxonaPositionDataInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ecephys/neuroscope/neuroscopedatainterface.py...

Function: NeuroScopeRecordingInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: NeuroScopeRecordingInterface.get_ecephys_metadata
Docstring:
Auto-populates ecephys metadata from the xml_file_path.

Parameters
----------
xml_file_path : str
    Path to the XML file containing device and electrode configuration.

Returns
-------
dict
    Dictionary containing metadata for ElectrodeGroup and Electrodes.
    Includes group names, descriptions, and electrode properties.
--------------------------------------------------------------------------------

Function: NeuroScopeRecordingInterface.get_metadata
Docstring:
Get metadata for the NeuroScope recording.

Returns
-------
dict
    Dictionary containing metadata including Ecephys information and session start time.
--------------------------------------------------------------------------------

Function: NeuroScopeRecordingInterface.get_original_timestamps
Docstring:
Get the original timestamps for the recording.

Returns
-------
numpy.ndarray or list of numpy.ndarray
    The timestamps for each sample in the recording. If there are multiple segments,
    returns a list of timestamp arrays, one for each segment.
--------------------------------------------------------------------------------

Function: NeuroScopeLFPInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: NeuroScopeLFPInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: NeuroScopeSortingInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: NeuroScopeSortingInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ecephys/neuroscope/neuroscope_utils.py...

Function: get_xml_file_path
Docstring:
Infer the xml_file_path from the data_file_path (.dat or .eeg).

Assumes the two are in the same folder and follow the session_id naming convention.

Parameters
----------
data_file_path : str
    Path to the data file (.dat or .eeg)

Returns
-------
str
    The path to the corresponding XML file.
--------------------------------------------------------------------------------

Function: get_xml
Docstring:
Auxiliary function for retrieving root of xml.

Parameters
----------
xml_file_path : str
    Path to the XML file.

Returns
-------
lxml.etree._Element
    The root element of the XML tree.
--------------------------------------------------------------------------------

Function: get_neural_channels
Docstring:
Extracts the channels corresponding to neural data from an XML file.

Parameters
----------
xml_file_path : str
    Path to the XML file containing the necessary data.

Returns
-------
list
    List reflecting the group structure of the channels.

Notes
-----
This function attempts to extract the channels that correspond to neural data,
specifically those that come from the probe. It uses the `spikeDetection` structure
in the XML file to identify the channels involved in spike detection. Channels that are
not involved in spike detection, such as auxiliary channels from the intan system, are excluded.

The function returns a list representing the group structure of the channels.

Example:
[[1, 2, 3], [4, 5, 6], [7, 8, 9]

Where [1, 2, 3] are the channels in the first group, [4, 5, 6] are the channels in the second group, etc.

Warning:
This function assumes that all the channels that correspond to neural data are involved in spike detection.
More concretely, it assumes that the channels appear on the `spikeDetection` field of the XML file.
If this is not the case, the function will return an incorrect list of neural channels.
Please report this as an issue if this is the case.
--------------------------------------------------------------------------------

Function: get_channel_groups
Docstring:
Auxiliary function for retrieving a list of groups, each containing a list of channels.

These are all the channels that are connected to the probe.

Parameters
----------
xml_file_path : str
    Path to the XML file.

Returns
-------
list
    List of lists, where each inner list contains the channel numbers for that group.
    For example: [[1, 2, 3], [4, 5, 6]] represents two groups with three channels each.
--------------------------------------------------------------------------------

Function: get_session_start_time
Docstring:
Auxiliary function for retrieving the session start time from the xml file.

Parameters
----------
xml_file_path : str
    Path to the XML file.

Returns
-------
datetime
    The session start time as a datetime object. Returns None if no date is found.
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ecephys/alphaomega/alphaomegadatainterface.py...

Function: AlphaOmegaRecordingInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: AlphaOmegaRecordingInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ecephys/blackrock/header_tools.py...

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ecephys/blackrock/blackrockdatainterface.py...

Function: BlackrockRecordingInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: BlackrockRecordingInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: BlackrockSortingInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: BlackrockSortingInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ecephys/biocam/biocamdatainterface.py...

Function: BiocamRecordingInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ecephys/cellexplorer/cellexplorerdatainterface.py...

Function: CellExplorerRecordingInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: CellExplorerRecordingInterface.get_original_timestamps
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: CellExplorerSortingInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ecephys/maxwell/maxonedatainterface.py...

Function: MaxOneRecordingInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ecephys/intan/intandatainterface.py...

Function: IntanRecordingInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: IntanRecordingInterface.get_metadata_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: IntanRecordingInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ecephys/spike2/spike2datainterface.py...

Function: Spike2RecordingInterface.get_source_schema
Docstring:
Get the schema for the source arguments.

Returns
-------
dict
    The schema dictionary containing input parameters and descriptions
    for initializing the Spike2 recording interface.
--------------------------------------------------------------------------------

Function: Spike2RecordingInterface.get_all_channels_info
Docstring:
Retrieve and inspect necessary channel information prior to initialization.

Parameters
----------
file_path : FilePath
    Path to .smr or .smrx file.

Returns
-------
dict
    Dictionary containing information about all channels in the Spike2 file.
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ecephys/neuralynx/neuralynxdatainterface.py...

Function: NeuralynxRecordingInterface.get_stream_names
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: NeuralynxRecordingInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: NeuralynxRecordingInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ecephys/mcsraw/mcsrawdatainterface.py...

Function: MCSRawRecordingInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/ecephys/mearec/mearecdatainterface.py...

Function: MEArecRecordingInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: MEArecRecordingInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/icephys/abf/abfdatainterface.py...

Function: get_start_datetime
Docstring:
Get start datetime for Abf file.

Parameters
----------
neo_reader : neo.io.AxonIO
    The Neo reader object for the ABF file.

Returns
-------
datetime
    The start date and time of the recording.
--------------------------------------------------------------------------------

Function: AbfInterface.get_source_schema
Docstring:
No docstring
--------------------------------------------------------------------------------

Function: AbfInterface.get_metadata
Docstring:
No docstring
--------------------------------------------------------------------------------

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/text/excel/exceltimeintervalsinterface.py...

Analyzing /Users/pauladkisson/Documents/CatalystNeuro/Neuroconv/neuroconv/src/neuroconv/datainterfaces/text/csv/csvtimeintervalsinterface.py...
