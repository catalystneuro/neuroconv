name: Deploy tests

on:
  pull_request:
    types: [synchronize, opened, reopened, ready_for_review]
    # Synchronize, open and reopened are the default types for pull request
    # We add ready_for_review to trigger the check for changelog and full tests when ready for review is clicked
  merge_group:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  assess-file-changes:
    uses: ./.github/workflows/assess-file-changes.yml

  detect-changelog-updates:
    needs: assess-file-changes
    if: ${{ needs.assess-file-changes.outputs.SOURCE_CHANGED == 'true' && github.event.pull_request.draft == false }}
    name: Auto-detecting CHANGELOG.md updates
    runs-on: ubuntu-latest
    steps:
      - if: ${{ needs.assess-file-changes.outputs.CHANGELOG_UPDATED == 'true' }}
        run: echo "CHANGELOG.md has been updated."
      - if: ${{ needs.assess-file-changes.outputs.CHANGELOG_UPDATED == 'false' }}
        run: |
          echo "CHANGELOG.md has not been updated."
          0

  run-tests:
    needs: assess-file-changes
    if: ${{ needs.assess-file-changes.outputs.SOURCE_CHANGED == 'true' }}
    uses: ./.github/workflows/testing.yml
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      S3_GIN_BUCKET: ${{ secrets.S3_GIN_BUCKET }}
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    with:  #  Ternary operator: condition && value_if_true || value_if_false
      python-versions: ${{ github.event.pull_request.draft == true && '["3.9"]' || '["3.9", "3.10", "3.11", "3.12"]' }}
      os-versions: ${{ github.event.pull_request.draft == true && '["ubuntu-latest"]' || '["ubuntu-latest", "macos-latest", "macos-13", "windows-latest"]' }}

  # If the conversion gallery is the only thing that changed, run doctests only
  run-doctests-only:
    needs: assess-file-changes
    if: ${{ needs.assess-file-changes.outputs.CONVERSION_GALLERY_CHANGED == 'true' && needs.assess-file-changes.outputs.SOURCE_CHANGED != 'true' }}
    uses: ./.github/workflows/doctests.yml
    with:  #  Ternary operator: condition && value_if_true || value_if_false
      python-versions: ${{ github.event.pull_request.draft == true && '["3.9"]' || '["3.9", "3.10", "3.11", "3.12"]' }}
      os-versions: ${{ github.event.pull_request.draft == true && '["ubuntu-latest"]' || '["ubuntu-latest", "macos-latest", "macos-13", "windows-latest"]' }}


  run-live-service-tests:
    needs: assess-file-changes
    if: ${{ needs.assess-file-changes.outputs.SOURCE_CHANGED == 'true' }}
    uses: ./.github/workflows/live-service-testing.yml
    secrets:
      DANDI_API_KEY: ${{ secrets.DANDI_API_KEY }}
    with:  #  Ternary operator: condition && value_if_true || value_if_false
      python-versions: ${{ github.event.pull_request.draft == true && '["3.9"]' || '["3.9", "3.10", "3.11", "3.12"]' }}
      os-versions: ${{ github.event.pull_request.draft == true && '["ubuntu-latest"]' || '["ubuntu-latest", "macos-latest", "macos-13", "windows-latest"]' }}


  check-final-status:
    name: All tests passing
    if: always()
    needs:
      - run-tests
      - run-doctests-only
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether all jobs succeeded or at least one failed
        uses: re-actors/alls-green@release/v1
        with:
          allowed-skips: run-tests, run-doctests-only
          jobs: ${{ toJSON(needs) }}
