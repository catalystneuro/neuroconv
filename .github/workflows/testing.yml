name: Minimal and Full Tests

on:
  workflow_call:
    inputs:
      python-versions:
        description: 'List of Python versions to use in matrix, as JSON string'
        required: true
        type: string
        default: '["3.9", "3.10", "3.11", "3.12"]'
      os-versions:
        description: 'List of OS versions to use in matrix, as JSON string'
        required: true
        type: string
        default: '["ubuntu-latest", "macos-latest", "windows-latest"]'


    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      S3_GIN_BUCKET:
        required: true
      CODECOV_TOKEN:
        required: true
  workflow_dispatch:

jobs:
  run:
    name: ${{ matrix.os }} Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ${{ fromJson(inputs.python-versions) }}
        os: ${{ fromJson(inputs.os-versions) }}
    steps:
      - uses: actions/checkout@v4
      - run: git fetch --prune --unshallow --tags
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Global Setup
        run: |
          python -m pip install -U pip  # Official recommended way
          git config --global user.email "CI@example.com"
          git config --global user.name "CI Almighty"

      - name: Install NeuroConv with minimal requirements
        run: pip install .
      - name: Test initial import of all non-lazy dependencies
        run: python -c "import neuroconv"
      - name: Install Wine (For Plexon2 Tests)
        uses: ./.github/actions/install-wine
        with:
          os: ${{ runner.os }}

      - name: Install NeuroConv with testing requirements
        run: pip install .[test]
      - name: Run import tests
        run: |
          pytest tests/imports.py::TestImportStructure::test_top_level
          pytest tests/imports.py::TestImportStructure::test_tools
          pytest tests/imports.py::TestImportStructure::test_datainterfaces

      - name: Run minimal tests
        run: pytest tests/test_minimal -vv -rsx -n auto --dist loadscope

      - name: Install additional specific testing-only requirements
        run: pip install .[test]

      - name: Install with ecephys requirements
        run: pip install .[ecephys]
      - name: Run ecephys tests
        run: pytest tests/test_ecephys -vv -rsx -n auto --dist loadscope

      - name: Install with ophys requirements
        run: pip install .[ophys]
      - name: Run ophys tests
        run: pytest tests/test_ophys -vv -rsx -n auto --dist loadscope

      - name: Install with behavior requirements
        run: pip install .[behavior]
      - name: Run behavior tests
        run: pytest tests/test_behavior -vv -rsx -n auto --dist loadscope

      - name: Install with icephys requirements
        run: pip install .[icephys]

      #- name: Run icephys tests  # There are no icephys specific tests without data
      #  run: pytest tests/test_icephys -rsx -n auto --dist loadscope

      - name: Prepare data for tests
        uses: ./.github/actions/load-data
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          s3-gin-bucket: ${{ secrets.S3_GIN_BUCKET }}
          os: ${{ matrix.os }}

      - name: Install full requirements
        run: pip install .[full]

      - name: Run full pytest with coverage
        run: pytest -vv -rsx -n auto --dist loadscope --cov=neuroconv --cov-report xml:./codecov.xml
      - name: Upload full coverage to Codecov
        if: ${{ matrix.python-version == '3.9' && matrix.os == 'ubuntu-latest' }}
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./codecov.xml
          flags: unittests
          name: codecov-umbrella
          codecov_yml_path: ./codecov.yml
          fail_ci_if_error: true
          verbose: true
