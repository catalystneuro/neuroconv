name: Minimal and Full Tests
on:
  schedule:
    - cron: "0 16 * * *"  # Daily at noon EST
  pull_request:

env:
  DANDI_API_KEY: ${{ secrets.DANDI_API_KEY }}

jobs:
  run:
    name: Minimal and full tests on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9]
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: s-weigand/setup-conda@v1
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow --tags
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Global Setup
        run: |
          python -m pip install -U pip  # Official recommended way
          pip install pytest-xdist
          git config --global user.email "CI@example.com"
          git config --global user.name "CI Almighty"
          pip install wheel # Needed for scan image
      - name: Install neuroconv with minimal requirements
        run: pip install .[test]
      - name: Run minimal tests
        run: pytest tests/test_internals -n auto --dist loadscope
      - name: Install full requirements (-e needed for codecov report)
        run: pip install -e .[full]

      - name: Get ephy_testing_data current head hash
        id: ecephys
        run: echo "::set-output name=HASH_EPHY_DATASET::$(git ls-remote https://gin.g-node.org/NeuralEnsemble/ephy_testing_data.git HEAD | cut -f1)"
      - name: Cache ephys dataset - ${{ steps.ecephys.outputs.HASH_EPHY_DATASET }}
        uses: actions/cache@v2
        id: cache-ecephys-datasets
        with:
          path: ./ephy_testing_data
          key: ecephys-datasets-2022-08-03-${{ matrix.os }}-${{ steps.ecephys.outputs.HASH_EPHY_DATASET }}
      - name: Get ophys_testing_data current head hash
        id: ophys
        run: echo "::set-output name=HASH_OPHYS_DATASET::$(git ls-remote https://gin.g-node.org/CatalystNeuro/ophys_testing_data.git HEAD | cut -f1)"
      - name: Cache ophys dataset - ${{ steps.ophys.outputs.HASH_OPHYS_DATASET }}
        uses: actions/cache@v2
        id: cache-ophys-datasets
        with:
          path: ./ophys_testing_data
          key: ophys-datasets-2022-08-03-${{ matrix.os }}-${{ steps.ophys.outputs.HASH_OPHYS_DATASET }}
      - name: Get behavior_testing_data current head hash
        id: behavior
        run: echo "::set-output name=HASH_BEHAVIOR_DATASET::$(git ls-remote https://gin.g-node.org/CatalystNeuro/behavior_testing_data.git HEAD | cut -f1)"
      - name: Cache behavior dataset - ${{ steps.behavior.outputs.HASH_BEHAVIOR_DATASET }}
        uses: actions/cache@v2
        id: cache-behavior-datasets
        with:
          path: ./behavior_testing_data
          key: behavior-datasets-2022-07-29-${{ matrix.os }}-${{ steps.behavior.outputs.HASH_behavior_DATASET }}
      - if: ${{ (steps.cache-ecephys-datasets.outputs.cache-hit == false || steps.cache-ophys-datasets.outputs.cache-hit == false || steps.cache-behavior-datasets.outputs.cache-hit == false) && matrix.os == 'ubuntu-latest' }}
        name: Get datalad - Linux
        run: conda install -c conda-forge datalad==0.16.3
      - if: ${{ (steps.cache-ecephys-datasets.outputs.cache-hit == false || steps.cache-ophys-datasets.outputs.cache-hit == false || steps.cache-behavior-datasets.outputs.cache-hit == false) && matrix.os == 'windows-latest' }}
        name: Get git-annex - Windows
        uses: crazy-max/ghaction-chocolatey@v1.6.0
        with:
          args: install git-annex --ignore-checksums
      - if: ${{ (steps.cache-ecephys-datasets.outputs.cache-hit == false || steps.cache-ophys-datasets.outputs.cache-hit == false || steps.cache-behavior-datasets.outputs.cache-hit == false) && matrix.os == 'windows-latest' }}
        name: Get datalad - Windows
        run: pip install datalad==0.16.3

      - if: steps.cache-ecephys-datasets.outputs.cache-hit == false && (matrix.os == 'ubuntu-latest' || matrix.os == 'windows-latest')
        name: "Force GIN: ecephys download"
        run: |
          datalad install https://gin.g-node.org/NeuralEnsemble/ephy_testing_data
          cd ephy_testing_data
          datalad get -r ./neuralynx/Cheetah_v5.4.0/original_data/
          datalad get -r ./neuralynx/Cheetah_v5.5.1/original_data/
          datalad get -r ./neuralynx/Cheetah_v5.6.3/original_data/
          datalad get -r ./neuralynx/Cheetah_v5.7.4/original_data/
          datalad get -r ./neuroscope/
          datalad get -r ./openephysbinary/v0.4.4.1_with_video_tracking/
          datalad get -r ./blackrock/
          datalad get -r ./intan/
          datalad get -r ./spikegadgets/
          datalad get -r ./spike2/
          datalad get -r ./spikeglx/Noise4Sam_g0/Noise4Sam_g0_imec0/
          datalad get -r ./spikeglx/TEST_20210920_0_g0/
          datalad get -r ./phy/phy_example_0/
          datalad get -r ./axona/
          datalad get -r ./cellexplorer/
          datalad get -r ./axon/
          datalad get -r ./edf/
          cd ..
      - if: steps.cache-ophys-datasets.outputs.cache-hit == false && (matrix.os == 'ubuntu-latest' || matrix.os == 'windows-latest')
        name: "Force GIN: ophys download"
        run: datalad install -rg https://gin.g-node.org/CatalystNeuro/ophys_testing_data
      - if: steps.cache-behavior-datasets.outputs.cache-hit == false && (matrix.os == 'ubuntu-latest' || matrix.os == 'windows-latest')
        name: "Force GIN: behavior download"
        run: datalad install -rg https://gin.g-node.org/CatalystNeuro/behavior_testing_data

      - if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'windows-latest'}}
        name: Run full pytest with coverage
        run: pytest -n auto --dist loadscope --cov=./ --cov-report xml:./codecov.xml
      - if: ${{ matrix.python-version == '3.9' && matrix.os == 'ubuntu-latest'}}
        name: Upload full coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./codecov.xml
          flags: unittests
          name: codecov-umbrella
          yml: ./codecov.yml
